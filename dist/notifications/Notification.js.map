{"version":3,"sources":["notifications/Notification.ts"],"names":[],"mappings":"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","file":"Notification.js","sourcesContent":["/**\n * Shows notifcations and hints to the user\n */\n\ndeclare global {\n  interface Window {\n    vtta: VTTA;\n  }\n}\n\nconst MARGIN = 10;\n\ninterface NotificationsOptionsHide {\n  selector: JQuery;\n  event: string;\n}\n\ninterface NotificationOptions {\n  width?: number;\n  height?: number;\n  element?: JQuery;\n  align?: string;\n  buttons?: string[];\n  hide?: NotificationsOptionsHide;\n}\n\ninterface Notification {\n  hide?: () => void;\n  show?: (message: string, timeout?: number) => void;\n}\n\ninterface Hint {\n  hide?: () => void;\n  show?: (message: string, options?: NotificationOptions) => void;\n}\n\ninterface VTTA {\n  notification: Notification;\n  // hint: Hint;\n}\n\nconst registerNotifications = (): void => {\n  // register the notification global object\n\n  if ($(\"#tips-notifications\").length === 0) {\n    $(\"body\").append(`<div id=\"tips-notifications\" class=\"app\"></div>`);\n  }\n  // if ($(\"#tips-hints\").length === 0) {\n  //   $(\"body\").append(`<div id=\"tips-hints\"></div>`);\n  // }\n\n  window.vtta =\n    <VTTA>window.vtta ||\n    <VTTA>{\n      notification: {\n        clear: () => {\n          $(\"#tips-notifications div\").fadeOut(200, () => {\n            $(\"#tips-notifications\").empty();\n          });\n        },\n        show: (message, timeout = 4000) => {\n          //$(\"#tips-notifications\").css(\"left\", $(\"#players\").css(\"left\"));\n          // prettier-ignore\n          //$(\"#tips-notifications\").css(\"bottom\", $(\"#players\").height() + (2 * MARGIN));\n\n          let note = $(\"#tips-notifications\").append(message);\n          $(note).hide().fadeIn(200);\n\n          if (timeout)\n            setTimeout(() => {\n              $(note).fadeOut(200, () => {\n                $(note).remove();\n              });\n            }, timeout);\n          else\n            $(note).append(`<p style=\"text-align: center; color: #7e7e7e; margin: 0px;\"><small>${game.i18n.localize(\"FOUNDRYTIPS.clicktoclose\")}</small>`);\n\n          $(note).on(\"click\", () => {\n            $(note).fadeOut(200, () => {\n              $(note).remove();\n            });\n          });\n        },\n      }\n      // hint: {\n      //   clear: () => {\n      //     $(\"#tips-hints div\").hide(200, () => {\n      //       $(\"#tips-hints\").empty();\n      //     });\n      //   },\n      //   show: (message, options: NotificationOptions = {}) => {\n      //     return new Promise((resolve) => {\n      //       $(\"#tips-hints\").css(\"width\", options.width ? options.width : 300);\n\n      //       // construct the note\n      //       let note = $(`<div style=\"display: none\"></div>`);\n      //       $(note).append(message);\n      //       $(note).append('<div class=\"buttons\"></div>');\n      //       $(\"#tips-hints\").append(note);\n      //       $(note).fadeIn(200);\n\n      //       if (!options.align) options.align = options.element ? \"RIGHT\" : \"CENTER\";\n\n      //       let anchor = {\n      //         width: 0,\n      //         height: 0,\n      //         top: Math.round(window.innerHeight / 2),\n      //         left: Math.round(window.innerWidth / 2),\n      //       };\n\n      //       if (options.element) {\n      //         anchor = Object.assign(\n      //           { width: $(options.element).width(), height: $(options.element).height() },\n      //           $(options.element).offset()\n      //         );\n      //       }\n      //       const noteInfo = Object.assign(\n      //         { width: $(\"#tips-hints\").width(), height: $(\"#tips-hints\").height() },\n      //         $(\"#tips-hints\").position()\n      //       );\n\n      //       switch (options.align) {\n      //         case \"RIGHT\":\n      //           $(\"#tips-hints\").css(\"top\", anchor.top);\n      //           $(\"#tips-hints\").css(\"left\", anchor.left + anchor.width + MARGIN);\n      //           break;\n      //         case \"LEFT\":\n      //           $(\"#tips-hints\").css(\"top\", anchor.top);\n      //           $(\"#tips-hints\").css(\"left\", anchor.left - noteInfo.width - MARGIN);\n      //           break;\n      //         case \"TOP\":\n      //           $(\"#tips-hints\").css(\"top\", anchor.top - noteInfo.height - MARGIN);\n      //           $(\"#tips-hints\").css(\"left\", anchor.left);\n      //           break;\n      //         case \"BOTTOM\":\n      //           $(\"#tips-hints\").css(\"top\", anchor.top + anchor.height + MARGIN);\n      //           $(\"#tips-hints\").css(\"left\", anchor.left);\n      //           break;\n\n      //         default:\n      //           // eslint-disable-next-line no-mixed-operators\n      //           $(\"#tips-hints\").css(\"top\", anchor.top - Math.round(noteInfo.height / 2));\n      //           // eslint-disable-next-line no-mixed-operators\n      //           $(\"#tips-hints\").css(\"left\", anchor.left - Math.round(noteInfo.width / 2));\n      //       }\n\n      //       if (options.buttons) {\n      //         for (let name of options.buttons) {\n      //           let btn = $(\"<button>\" + name + \"</button>\");\n      //           $(\"div.buttons\", note).append(btn);\n      //           $(btn).on(\"click\", () => {\n      //             $(note).fadeOut(100, () => {\n      //               $(note).remove();\n      //               resolve(name);\n      //             });\n      //           });\n      //         }\n      //       }\n      //       if (options.hide) {\n      //         $(options.hide.selector).on(options.hide.event, () => {\n      //           $(note).fadeOut(100, () => {\n      //             $(note).remove();\n      //             resolve(true);\n      //           });\n      //         });\n      //       }\n      //     });\n      //   },\n      // },\n    };\n};\n\nexport default registerNotifications;\n"]}